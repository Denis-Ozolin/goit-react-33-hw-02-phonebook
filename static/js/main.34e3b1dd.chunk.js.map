{"version":3,"sources":["components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/App.jsx","index.js"],"names":["ContactForm","state","name","number","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","onChange","type","pattern","title","required","Component","ContactList","contacts","onDelete","length","map","id","onClick","Filter","onGetValue","App","filter","formSubmitHandler","onCheckUniqueName","alert","uuidv4","filterUpdateHandler","data","find","filteredContactsHandler","toLocaleLowerCase","includes","onDeleteContact","prevState","contact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.34e3b1dd.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nexport class ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = event => {\n    const { name, value } = event.currentTarget;\n\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    this.props.onSubmit(this.state);\n\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <label>\n            Name\n            <input\n              onChange={this.handleChange}\n              value={name}\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n            />\n          </label>\n          <label>\n            Number\n            <input\n              onChange={this.handleChange}\n              value={number}\n              type=\"tel\"\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n              required\n            />\n          </label>\n          <button type=\"submit\">Add contact</button>\n        </form>\n      </div>\n    );\n  }\n}\n","export const ContactList = ({ contacts, onDelete }) => {\n  return (\n    <ul>\n      {contacts.length\n        ? contacts.map(({ id, name, number }) => (\n            <li key={id}>\n              {name}: {number}\n              <button type=\"button\" onClick={() => onDelete(id)}>\n                delete\n              </button>\n            </li>\n          ))\n        : null}\n    </ul>\n  );\n};\n","import React, { Component } from 'react';\n\nexport class Filter extends Component {\n  state = {\n    value: '',\n  };\n\n  handleChange = event => {\n    const { value } = event.currentTarget;\n\n    this.setState({ value });\n\n    this.props.onGetValue(value);\n  };\n\n  render() {\n    const { value } = this.state;\n    return (\n      <label>\n        Find contacts by name\n        <input onChange={this.handleChange} value={value} type=\"text\" />\n      </label>\n    );\n  }\n}\n","import { v4 as uuidv4 } from 'uuid';\nimport { Component } from 'react';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\n\nexport class App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  formSubmitHandler = ({ name, number }) => {\n    this.onCheckUniqueName(name)\n      ? alert(`${name} is alredy in contacts.`)\n      : this.setState(({ contacts }) => ({\n          contacts: [\n            {\n              id: uuidv4(),\n              name,\n              number,\n            },\n            ...contacts,\n          ],\n        }));\n  };\n\n  filterUpdateHandler = data => {\n    this.setState({\n      filter: data,\n    });\n  };\n\n  onCheckUniqueName = value => {\n    const { contacts } = this.state;\n\n    return contacts.find(({ name }) => name === value);\n  };\n\n  filteredContactsHandler = () => {\n    const { contacts, filter } = this.state;\n\n    return contacts.filter(({ name }) =>\n      name.toLocaleLowerCase().includes(filter.toLocaleLowerCase()),\n    );\n  };\n\n  onDeleteContact = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.formSubmitHandler} />\n        <h2>Contacts</h2>\n        <Filter onGetValue={this.filterUpdateHandler} />\n        {!filter ? (\n          <ContactList contacts={contacts} onDelete={this.onDeleteContact} />\n        ) : (\n          <ContactList contacts={this.filteredContactsHandler()} onDelete={this.onDeleteContact} />\n        )}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from 'components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}